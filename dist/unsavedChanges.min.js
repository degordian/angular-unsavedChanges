"use strict";angular.module("unsavedChanges",["resettable"]).provider("unsavedWarningsConfig",function(){var a=this,b=!1,c=!0,d=["$stateChangeStart"],e="You will lose unsaved changes if you leave this page",f="You will lose unsaved changes if you reload this page";Object.defineProperty(a,"navigateMessage",{get:function(){return e},set:function(a){e=a}}),Object.defineProperty(a,"reloadMessage",{get:function(){return f},set:function(a){f=a}}),Object.defineProperty(a,"useTranslateService",{get:function(){return c},set:function(a){c=!!a}}),Object.defineProperty(a,"routeEvent",{get:function(){return d},set:function(a){"string"==typeof a&&(a=[a]),d=a}}),Object.defineProperty(a,"logEnabled",{get:function(){return b},set:function(a){b=!!a}}),this.$get=["$injector",function(a){function g(b){return a.has("$translate")&&c?a.get("$translate").instant(b):!1}var h={log:function(){if(console.log&&b&&arguments.length){var a=[].slice.call(arguments);"object"==typeof console.log?log.apply.call(console.log,console,a):console.log.apply(console,a)}}};return Object.defineProperty(h,"useTranslateService",{get:function(){return c}}),Object.defineProperty(h,"reloadMessage",{get:function(){return g(f)||f}}),Object.defineProperty(h,"navigateMessage",{get:function(){return g(e)||e}}),Object.defineProperty(h,"routeEvent",{get:function(){return d}}),Object.defineProperty(h,"logEnabled",{get:function(){return b}}),h}]}).service("unsavedWarningSharedService",["$rootScope","unsavedWarningsConfig","$injector","$window",function(a,b,c,d){function e(){return j=!0,angular.forEach(i,function(a,c){b.log("Form : "+a.$name+" dirty : "+a.$dirty),a.$dirty&&(j=!1)}),j}function f(){b.log("No more forms, tearing down"),angular.forEach(k,function(a){a()}),k=[],d.onbeforeunload=null}function g(){b.log("Setting up"),d.onbeforeunload=h.confirmExit;var c=b.routeEvent;angular.forEach(c,function(c){var d=a.$on(c,function(d,f,g){b.log("user is moving with "+c),h.enabled&&!e()?(b.log("a form is dirty"),confirm(b.navigateMessage)?(b.log("user doesn't care about loosing stuff"),a.$broadcast("resetResettables")):(b.log("user wants to cancel leaving"),d.preventDefault())):b.log("all forms are clean")});k.push(d)})}var h=this,i=[],j=!0,k=[];this.allForms=function(){return i},this.init=function(a){0===i.length&&g(),b.log("Registering form",a),i.push(a),h.enabled=!0},this.removeForm=function(a){var c=i.indexOf(a);-1!==c&&(i.splice(c,1),b.log("Removing form from watch list",a),0===i.length&&f())},this.disable=function(){h.enabled=!1},this.enable=function(){h.enabled=!0},this.confirmExit=function(){return h.enabled&&!e()?b.reloadMessage:(a.$broadcast("resetResettables"),void f())}}]).directive("unsavedWarningClear",["unsavedWarningSharedService",function(a){return{scope:{},require:"^form",priority:10,link:function(a,b,c,d){b.bind("click",function(a){d.$setPristine()})}}}]).directive("unsavedWarningForm",["unsavedWarningSharedService","$rootScope",function(a,b){return{scope:{},require:"^form",link:function(b,c,d,e){for(var f=0;"FORM"!==c[0].tagName&&3>f;)f++,c=c.parent();if(f>=3)throw"unsavedWarningForm must be inside a form element";a.init(e),c.bind("submit",function(a){e.$valid&&e.$setPristine()}),c.bind("reset",function(a){a.preventDefault();var d=angular.element(c[0].querySelector("[resettable]"));d.length&&b.$apply(d.triggerHandler("resetResettables")),e.$setPristine()}),b.$on("$destroy",function(){a.removeForm(e)})}}}]),angular.module("resettable",[]).directive("resettable",["$parse","$compile","$rootScope",function(a,b,c){return{restrict:"A",link:function(b,c,d,e){var f,g,h;d.$observe("ngModel",function(c){g=a(d.ngModel),f=g.assign,h=g(b)});var i=function(){f(b,h)};c.on("resetResettables",i);var j=b.$on("resetResettables",i);b.$on("$destroy",j)}}}]);